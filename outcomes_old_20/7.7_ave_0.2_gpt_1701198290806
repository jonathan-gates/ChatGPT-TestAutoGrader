GPT Answered: 
they take up twice as much memory for each node: Correct
In a doubly linked list, there are more pointers to set and the mechanics of inserting and deleting are more difficult. Also, the special cases at the beginning or end of the list are more complicated: Correct
There are more pointers to set, the mechanics of inserting into and deleting from a doubly linked list are a bit more involved than for a singly linked list: Correct
Insertion and deletion with a doubly linked list are more involved than with a singly linked list leaving more room for error and complex algorithms: Correct
Need more memory to store "previous" pointers: Correct
a node in a doubly linked list takes up more memory than a node in a singly linked list: Correct
You have to keep up with where you are and you have to consider the predecessor and successor connections when inserting/deleting: Correct
Each node requires an extra node, requires more memory, and is more difficult to insert and remove individual nodes: Incorrect
Double-linked lists require more space per node, and their elementary operations are more expensive: Correct
More difficult to delete and create nodes: Correct
They use more memory and you have to make 2 pointers and update 2 pointers each time you change the list: Correct
nodes take up more memory: Correct
Each node requires an extra pointer (space requirements increased), Insertion or deletion of a node takes a longer (more pointer operations): Correct
its a little more confusing. The special cases at the end and beginning become more difficult to do: Correct
increased actions to add and remove elements to the linked list: Correct
The main disadvanate is that if hard to remove all items in the list: Incorrect
each node requires an extra pointer, taking up more storage.  insertions and deletions require more pointer operations: Correct
in a doubly linked list there are twice as many pointers for each element , therefore more memory is used: Correct
The process of adding and removing Nodes in a Doubly linked list is more complex than in a basic linked list: Correct
Double linked lists require more space per node, and their elementary operation are more expensive: Correct
1- each node requires an extra pointer, requiring more space2- the insertion or deletion of a node takes a bit longer, more pointer operations: Correct
It takes up twice the storage needed: Correct
using more pointers to enable the backward movement takes up more memory, having more pointers make it slightly more work to add or remove a node from the list: Correct
increased memory requirements, slightly more complicated when modifying elements in the list: Correct
not answered: Incorrect

Expected: 
['correct', 'incorrect', 'incorrect', 'incorrect', 'correct', 'correct', 'incorrect', 'correct', 'correct', 'incorrect', 'correct', 'correct', 'correct', 'incorrect', 'incorrect', 'incorrect', 'correct', 'correct', 'incorrect', 'correct', 'correct', 'correct', 'correct', 'correct', 'incorrect']